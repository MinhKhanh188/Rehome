// back-end/src/models/User.js
const mongoose = require('mongoose');

const userSchema = new mongoose.Schema({
  name: { type: String, required: true },
  email: { type: String, required: true, unique: true },
  passwordHash: { type: String, required: true },
  profilePic: { type: String },
  phoneNumber: { type: String },
  facebookUrl: { type: String },
  location: { type: String },
  isVerified: { type: Boolean, default: false },
  isAdmin: { type: Boolean, default: false }
}, { timestamps: true });

module.exports = mongoose.model('users', userSchema,);

// back-end/src/models/SavedItem.js
const mongoose = require('mongoose');

const savedItemSchema = new mongoose.Schema({
    userId: { type: mongoose.Schema.Types.ObjectId, ref: 'users', required: true },
    productId: { type: mongoose.Schema.Types.ObjectId, ref: 'posts', required: true },
    savedAt: { type: Date, default: Date.now }
  });
  
  module.exports = mongoose.model('savedItems', savedItemSchema);
  
// back-end/src/models/ReportedPost.js
const mongoose = require('mongoose');

const reportedPostSchema = new mongoose.Schema({
    postId: { type: mongoose.Schema.Types.ObjectId, ref: 'posts', required: true },
    reporterId: { type: mongoose.Schema.Types.ObjectId, ref: 'users', required: true },
    reason: { type: String, required: true },
    reportedAt: { type: Date, default: Date.now }
  });
  
  module.exports = mongoose.model('reportedPosts', reportedPostSchema);
  
  // back-end/src/models/Province.js
const mongoose = require('mongoose');

const provinceSchema = new mongoose.Schema({
    name: { type: String, required: true }
});

module.exports = mongoose.model('provinces', provinceSchema);

// back-end/src/models/Category.js
const mongoose = require('mongoose');

const categorySchema = new mongoose.Schema({
    name: { type: String, required: true }
  }, { timestamps: true });
  
  module.exports = mongoose.model('categories', categorySchema);
  